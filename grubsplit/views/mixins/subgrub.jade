mixin subgrub(subgrub, user, grubowner, completed)
    if completed
        if subgrub.paid
            .hasPaid
                .row
                    .col-md-10
                        h4 #{subgrub.owner.name}'s items
                    if (user._id.equals(grubowner._id))
                        //- && !subgrub.owner._id.equals(grubowner._id)
                        .col-md-2
                            button.btn.btn-danger.togglePaid(subGrubId=subgrub._id) Mark As Unpaid    
        else
            .hasNotPaid
                .row
                    .col-md-10
                        h4 #{subgrub.owner.name}'s items
                    if (user._id.equals(grubowner._id)) 
                         //- && !subgrub.owner._id.equals(grubowner._id)
                        .col-md-2
                            button.btn.btn-success.togglePaid(subGrubId=subgrub._id) Mark As Paid
    else
        div
            .row
                .col-md-8
                    h4 #{subgrub.owner.name}'s items
                if (user._id.equals(subgrub.owner._id))
                    .col-md-2
                        form.form-horizontal(method='POST', action='/subgrubs/' + subgrub._id +'?_method=GET')
                            button.btn.btn-warning(type='submit') Edit SubGrub
                    .col-md-2
                        form.form-horizontal(method='POST', action='/subgrubs/' + subgrub._id +'?_method=DELETE')
                            button.btn.btn-danger(type='submit') Delete SubGrub
    +listGroup('list')
        for item in subgrub.items  
            +listItem
                +listHeading #{item.name}
                    +listText Price: #{item.price}
                    +listText Quantity: #{item.quantity}

//- List group mixins
- var groupType
 
mixin listGroup(type)
    - groupType = type
    case groupType
        when 'list'
            ul.list-group
                block
        default
            .list-group
                block
 
mixin listItem(arg1, arg2)
    case groupType
        when 'list'
            li( class=["list-group-item", arg1] )
                block
        when 'links'
            a( href=arg1, class=["list-group-item", arg2] )
                block
        default
            .list-group-item( class=["list-group-item", arg1] )
                block
 
mixin listHeading
    h4.list-group-item-heading
        block
 
mixin listText
    p.list-group-item-text
        block


    //- .row
    //-     if completed
    //-         if paid
    //-             .col-md-10.hasPaid
    //-                 h4 #{subgrub.owner.name}'s items
    //-             if (user._id.equals(grubowner._id))
    //-                 //- && !subgrub.owner._id.equals(grubowner._id)
    //-                 .col-md-2
    //-                     button.btn.btn-danger.togglePaid(subGrubId=subgrub._id) Mark As Unpaid
    //-         else
    //-             .col-md-10.hasNotPaid
    //-                 h4 #{subgrub.owner.name}'s items
    //-             if (user._id.equals(grubowner._id)) 
    //-                  //- && !subgrub.owner._id.equals(grubowner._id)
    //-                 .col-md-2
    //-                     button.btn.btn-success.togglePaid(subGrubId=subgrub._id) Mark As Paid
    //-     else 
    //-         .col-md-8
    //-             h4 #{subgrub.owner.name}'s items
    //-         if (user._id.equals(subgrub.owner._id))
    //-             .col-md-2
    //-                 form.form-horizontal(method='POST', action='/subgrubs/' + subgrub._id +'?_method=GET')
    //-                     button.btn.btn-warning(type='submit') Edit SubGrub
    //-             .col-md-2
    //-                 form.form-horizontal(method='POST', action='/subgrubs/' + subgrub._id +'?_method=DELETE')
    //-                     button.btn.btn-danger(type='submit') Delete SubGrub

